{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///D:/Protowiz/Industry%20Project/Scanner%20project/Scanner%20Dashboard/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,mNAAgB,CAG3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,IAAA,yHAAE,EACX,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,mNAAgB,CAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,IAAA,yHAAE,EAAC,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,mNAAgB,CAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,IAAA,yHAAE,EACX,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,mNAAgB,CAGtC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,IAAA,yHAAE,EAAC,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,mNAAgB,CAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,IAAA,yHAAE,EAAC,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,mNAAgB,CAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,IAAA,yHAAE,EAAC,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 89, "column": 0}, "map": {"version":3,"sources":["file:///D:/Protowiz/Industry%20Project/Scanner%20project/Scanner%20Dashboard/src/components/dashboard/stat-cards.tsx"],"sourcesContent":["\"use client\";\n\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { ScanLine, Server, HardDrive, Clock } from \"lucide-react\";\nimport { useState, useEffect } from \"react\";\n\nconst initialStats = {\n  totalScans: 14820,\n  devicesOnline: 4,\n  storageUsage: 68,\n  currentTime: new Date(),\n};\n\nexport default function StatCards() {\n  const [stats, setStats] = useState(initialStats);\n\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setStats(prevStats => ({\n        totalScans: prevStats.totalScans + Math.floor(Math.random() * 10),\n        devicesOnline: Math.random() > 0.8 ? 3 : 4,\n        storageUsage: Math.min(100, prevStats.storageUsage + Math.floor(Math.random() * 2)),\n        currentTime: new Date(),\n      }));\n    }, 30000); // Auto-refresh every 30 seconds\n\n    return () => clearInterval(timer);\n  }, []);\n  \n  // Separate timer for the clock to update every second\n  useEffect(() => {\n    const clockTimer = setInterval(() => {\n        setStats(prevStats => ({...prevStats, currentTime: new Date()}));\n    }, 1000);\n    return () => clearInterval(clockTimer);\n  }, []);\n\n  return (\n    <div className=\"grid gap-6 md:grid-cols-2 lg:grid-cols-4\">\n      <Card>\n        <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n          <CardTitle className=\"text-sm font-medium\">Total Scans</CardTitle>\n          <ScanLine className=\"h-4 w-4 text-muted-foreground\" />\n        </CardHeader>\n        <CardContent>\n          <div className=\"text-2xl font-bold\">{stats.totalScans.toLocaleString()}</div>\n          <p className=\"text-xs text-muted-foreground\">+20.1% from last month</p>\n        </CardContent>\n      </Card>\n      <Card>\n        <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n          <CardTitle className=\"text-sm font-medium\">Devices Online</CardTitle>\n          <Server className=\"h-4 w-4 text-muted-foreground\" />\n        </CardHeader>\n        <CardContent>\n          <div className=\"text-2xl font-bold\">{stats.devicesOnline} / 4</div>\n          <p className=\"text-xs text-muted-foreground\">All devices operational</p>\n        </CardContent>\n      </Card>\n      <Card>\n        <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n          <CardTitle className=\"text-sm font-medium\">Storage Usage</CardTitle>\n          <HardDrive className=\"h-4 w-4 text-muted-foreground\" />\n        </CardHeader>\n        <CardContent>\n          <div className=\"text-2xl font-bold\">{stats.storageUsage}%</div>\n          <p className=\"text-xs text-muted-foreground\">Percentage of total capacity</p>\n        </CardContent>\n      </Card>\n      <Card>\n        <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n          <CardTitle className=\"text-sm font-medium\">Hub Time (UTC)</CardTitle>\n          <Clock className=\"h-4 w-4 text-muted-foreground\" />\n        </CardHeader>\n        <CardContent>\n          <div className=\"text-2xl font-bold\">{stats.currentTime.toLocaleTimeString('en-GB', { timeZone: 'UTC' })}</div>\n          <p className=\"text-xs text-muted-foreground\">Synchronized</p>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAJA;;;;;AAMA,MAAM,eAAe;IACnB,YAAY;IACZ,eAAe;IACf,cAAc;IACd,aAAa,IAAI;AACnB;AAEe,SAAS;IACtB,MAAM,CAAC,OAAO,SAAS,GAAG,IAAA,iNAAQ,EAAC;IAEnC,IAAA,kNAAS,EAAC;QACR,MAAM,QAAQ,YAAY;YACxB,SAAS,CAAA,YAAa,CAAC;oBACrB,YAAY,UAAU,UAAU,GAAG,KAAK,KAAK,CAAC,KAAK,MAAM,KAAK;oBAC9D,eAAe,KAAK,MAAM,KAAK,MAAM,IAAI;oBACzC,cAAc,KAAK,GAAG,CAAC,KAAK,UAAU,YAAY,GAAG,KAAK,KAAK,CAAC,KAAK,MAAM,KAAK;oBAChF,aAAa,IAAI;gBACnB,CAAC;QACH,GAAG,QAAQ,gCAAgC;QAE3C,OAAO,IAAM,cAAc;IAC7B,GAAG,EAAE;IAEL,sDAAsD;IACtD,IAAA,kNAAS,EAAC;QACR,MAAM,aAAa,YAAY;YAC3B,SAAS,CAAA,YAAa,CAAC;oBAAC,GAAG,SAAS;oBAAE,aAAa,IAAI;gBAAM,CAAC;QAClE,GAAG;QACH,OAAO,IAAM,cAAc;IAC7B,GAAG,EAAE;IAEL,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC,wIAAI;;kCACH,8OAAC,8IAAU;wBAAC,WAAU;;0CACpB,8OAAC,6IAAS;gCAAC,WAAU;0CAAsB;;;;;;0CAC3C,8OAAC,0NAAQ;gCAAC,WAAU;;;;;;;;;;;;kCAEtB,8OAAC,+IAAW;;0CACV,8OAAC;gCAAI,WAAU;0CAAsB,MAAM,UAAU,CAAC,cAAc;;;;;;0CACpE,8OAAC;gCAAE,WAAU;0CAAgC;;;;;;;;;;;;;;;;;;0BAGjD,8OAAC,wIAAI;;kCACH,8OAAC,8IAAU;wBAAC,WAAU;;0CACpB,8OAAC,6IAAS;gCAAC,WAAU;0CAAsB;;;;;;0CAC3C,8OAAC,gNAAM;gCAAC,WAAU;;;;;;;;;;;;kCAEpB,8OAAC,+IAAW;;0CACV,8OAAC;gCAAI,WAAU;;oCAAsB,MAAM,aAAa;oCAAC;;;;;;;0CACzD,8OAAC;gCAAE,WAAU;0CAAgC;;;;;;;;;;;;;;;;;;0BAGjD,8OAAC,wIAAI;;kCACH,8OAAC,8IAAU;wBAAC,WAAU;;0CACpB,8OAAC,6IAAS;gCAAC,WAAU;0CAAsB;;;;;;0CAC3C,8OAAC,6NAAS;gCAAC,WAAU;;;;;;;;;;;;kCAEvB,8OAAC,+IAAW;;0CACV,8OAAC;gCAAI,WAAU;;oCAAsB,MAAM,YAAY;oCAAC;;;;;;;0CACxD,8OAAC;gCAAE,WAAU;0CAAgC;;;;;;;;;;;;;;;;;;0BAGjD,8OAAC,wIAAI;;kCACH,8OAAC,8IAAU;wBAAC,WAAU;;0CACpB,8OAAC,6IAAS;gCAAC,WAAU;0CAAsB;;;;;;0CAC3C,8OAAC,6MAAK;gCAAC,WAAU;;;;;;;;;;;;kCAEnB,8OAAC,+IAAW;;0CACV,8OAAC;gCAAI,WAAU;0CAAsB,MAAM,WAAW,CAAC,kBAAkB,CAAC,SAAS;oCAAE,UAAU;gCAAM;;;;;;0CACrG,8OAAC;gCAAE,WAAU;0CAAgC;;;;;;;;;;;;;;;;;;;;;;;;AAKvD","debugId":null}},
    {"offset": {"line": 380, "column": 0}, "map": {"version":3,"sources":["file:///D:/Protowiz/Industry%20Project/Scanner%20project/Scanner%20Dashboard/src/components/ui/chart.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as RechartsPrimitive from \"recharts\"\n\nimport { cn } from \"@/lib/utils\"\n\n// Format: { THEME_NAME: CSS_SELECTOR }\nconst THEMES = { light: \"\", dark: \".dark\" } as const\n\nexport type ChartConfig = {\n  [k in string]: {\n    label?: React.ReactNode\n    icon?: React.ComponentType\n  } & (\n    | { color?: string; theme?: never }\n    | { color?: never; theme: Record<keyof typeof THEMES, string> }\n  )\n}\n\ntype ChartContextProps = {\n  config: ChartConfig\n}\n\nconst ChartContext = React.createContext<ChartContextProps | null>(null)\n\nfunction useChart() {\n  const context = React.useContext(ChartContext)\n\n  if (!context) {\n    throw new Error(\"useChart must be used within a <ChartContainer />\")\n  }\n\n  return context\n}\n\nconst ChartContainer = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    config: ChartConfig\n    children: React.ComponentProps<\n      typeof RechartsPrimitive.ResponsiveContainer\n    >[\"children\"]\n  }\n>(({ id, className, children, config, ...props }, ref) => {\n  const uniqueId = React.useId()\n  const chartId = `chart-${id || uniqueId.replace(/:/g, \"\")}`\n\n  return (\n    <ChartContext.Provider value={{ config }}>\n      <div\n        data-chart={chartId}\n        ref={ref}\n        className={cn(\n          \"flex aspect-video justify-center text-xs [&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-none [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-sector]:outline-none [&_.recharts-surface]:outline-none\",\n          className\n        )}\n        {...props}\n      >\n        <ChartStyle id={chartId} config={config} />\n        <RechartsPrimitive.ResponsiveContainer>\n          {children}\n        </RechartsPrimitive.ResponsiveContainer>\n      </div>\n    </ChartContext.Provider>\n  )\n})\nChartContainer.displayName = \"Chart\"\n\nconst ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {\n  const colorConfig = Object.entries(config).filter(\n    ([, config]) => config.theme || config.color\n  )\n\n  if (!colorConfig.length) {\n    return null\n  }\n\n  return (\n    <style\n      dangerouslySetInnerHTML={{\n        __html: Object.entries(THEMES)\n          .map(\n            ([theme, prefix]) => `\n${prefix} [data-chart=${id}] {\n${colorConfig\n  .map(([key, itemConfig]) => {\n    const color =\n      itemConfig.theme?.[theme as keyof typeof itemConfig.theme] ||\n      itemConfig.color\n    return color ? `  --color-${key}: ${color};` : null\n  })\n  .join(\"\\n\")}\n}\n`\n          )\n          .join(\"\\n\"),\n      }}\n    />\n  )\n}\n\nconst ChartTooltip = RechartsPrimitive.Tooltip\n\nconst ChartTooltipContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<typeof RechartsPrimitive.Tooltip> &\n    React.ComponentProps<\"div\"> & {\n      hideLabel?: boolean\n      hideIndicator?: boolean\n      indicator?: \"line\" | \"dot\" | \"dashed\"\n      nameKey?: string\n      labelKey?: string\n    }\n>(\n  (\n    {\n      active,\n      payload,\n      className,\n      indicator = \"dot\",\n      hideLabel = false,\n      hideIndicator = false,\n      label,\n      labelFormatter,\n      labelClassName,\n      formatter,\n      color,\n      nameKey,\n      labelKey,\n    },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    const tooltipLabel = React.useMemo(() => {\n      if (hideLabel || !payload?.length) {\n        return null\n      }\n\n      const [item] = payload\n      const key = `${labelKey || item.dataKey || item.name || \"value\"}`\n      const itemConfig = getPayloadConfigFromPayload(config, item, key)\n      const value =\n        !labelKey && typeof label === \"string\"\n          ? config[label as keyof typeof config]?.label || label\n          : itemConfig?.label\n\n      if (labelFormatter) {\n        return (\n          <div className={cn(\"font-medium\", labelClassName)}>\n            {labelFormatter(value, payload)}\n          </div>\n        )\n      }\n\n      if (!value) {\n        return null\n      }\n\n      return <div className={cn(\"font-medium\", labelClassName)}>{value}</div>\n    }, [\n      label,\n      labelFormatter,\n      payload,\n      hideLabel,\n      labelClassName,\n      config,\n      labelKey,\n    ])\n\n    if (!active || !payload?.length) {\n      return null\n    }\n\n    const nestLabel = payload.length === 1 && indicator !== \"dot\"\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"grid min-w-[8rem] items-start gap-1.5 rounded-lg border border-border/50 bg-background px-2.5 py-1.5 text-xs shadow-xl\",\n          className\n        )}\n      >\n        {!nestLabel ? tooltipLabel : null}\n        <div className=\"grid gap-1.5\">\n          {payload.map((item, index) => {\n            const key = `${nameKey || item.name || item.dataKey || \"value\"}`\n            const itemConfig = getPayloadConfigFromPayload(config, item, key)\n            const indicatorColor = color || item.payload.fill || item.color\n\n            return (\n              <div\n                key={item.dataKey}\n                className={cn(\n                  \"flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5 [&>svg]:text-muted-foreground\",\n                  indicator === \"dot\" && \"items-center\"\n                )}\n              >\n                {formatter && item?.value !== undefined && item.name ? (\n                  formatter(item.value, item.name, item, index, item.payload)\n                ) : (\n                  <>\n                    {itemConfig?.icon ? (\n                      <itemConfig.icon />\n                    ) : (\n                      !hideIndicator && (\n                        <div\n                          className={cn(\n                            \"shrink-0 rounded-[2px] border-[--color-border] bg-[--color-bg]\",\n                            {\n                              \"h-2.5 w-2.5\": indicator === \"dot\",\n                              \"w-1\": indicator === \"line\",\n                              \"w-0 border-[1.5px] border-dashed bg-transparent\":\n                                indicator === \"dashed\",\n                              \"my-0.5\": nestLabel && indicator === \"dashed\",\n                            }\n                          )}\n                          style={\n                            {\n                              \"--color-bg\": indicatorColor,\n                              \"--color-border\": indicatorColor,\n                            } as React.CSSProperties\n                          }\n                        />\n                      )\n                    )}\n                    <div\n                      className={cn(\n                        \"flex flex-1 justify-between leading-none\",\n                        nestLabel ? \"items-end\" : \"items-center\"\n                      )}\n                    >\n                      <div className=\"grid gap-1.5\">\n                        {nestLabel ? tooltipLabel : null}\n                        <span className=\"text-muted-foreground\">\n                          {itemConfig?.label || item.name}\n                        </span>\n                      </div>\n                      {item.value && (\n                        <span className=\"font-mono font-medium tabular-nums text-foreground\">\n                          {item.value.toLocaleString()}\n                        </span>\n                      )}\n                    </div>\n                  </>\n                )}\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    )\n  }\n)\nChartTooltipContent.displayName = \"ChartTooltip\"\n\nconst ChartLegend = RechartsPrimitive.Legend\n\nconst ChartLegendContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> &\n    Pick<RechartsPrimitive.LegendProps, \"payload\" | \"verticalAlign\"> & {\n      hideIcon?: boolean\n      nameKey?: string\n    }\n>(\n  (\n    { className, hideIcon = false, payload, verticalAlign = \"bottom\", nameKey },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    if (!payload?.length) {\n      return null\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"flex items-center justify-center gap-4\",\n          verticalAlign === \"top\" ? \"pb-3\" : \"pt-3\",\n          className\n        )}\n      >\n        {payload.map((item) => {\n          const key = `${nameKey || item.dataKey || \"value\"}`\n          const itemConfig = getPayloadConfigFromPayload(config, item, key)\n\n          return (\n            <div\n              key={item.value}\n              className={cn(\n                \"flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3 [&>svg]:text-muted-foreground\"\n              )}\n            >\n              {itemConfig?.icon && !hideIcon ? (\n                <itemConfig.icon />\n              ) : (\n                <div\n                  className=\"h-2 w-2 shrink-0 rounded-[2px]\"\n                  style={{\n                    backgroundColor: item.color,\n                  }}\n                />\n              )}\n              {itemConfig?.label}\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n)\nChartLegendContent.displayName = \"ChartLegend\"\n\n// Helper to extract item config from a payload.\nfunction getPayloadConfigFromPayload(\n  config: ChartConfig,\n  payload: unknown,\n  key: string\n) {\n  if (typeof payload !== \"object\" || payload === null) {\n    return undefined\n  }\n\n  const payloadPayload =\n    \"payload\" in payload &&\n    typeof payload.payload === \"object\" &&\n    payload.payload !== null\n      ? payload.payload\n      : undefined\n\n  let configLabelKey: string = key\n\n  if (\n    key in payload &&\n    typeof payload[key as keyof typeof payload] === \"string\"\n  ) {\n    configLabelKey = payload[key as keyof typeof payload] as string\n  } else if (\n    payloadPayload &&\n    key in payloadPayload &&\n    typeof payloadPayload[key as keyof typeof payloadPayload] === \"string\"\n  ) {\n    configLabelKey = payloadPayload[\n      key as keyof typeof payloadPayload\n    ] as string\n  }\n\n  return configLabelKey in config\n    ? config[configLabelKey]\n    : config[key as keyof typeof config]\n}\n\nexport {\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n  ChartLegend,\n  ChartLegendContent,\n  ChartStyle,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 680, "column": 0}, "map": {"version":3,"sources":["file:///D:/Protowiz/Industry%20Project/Scanner%20project/Scanner%20Dashboard/src/components/ui/tabs.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n"],"names":[],"mappings":";;;;;;;;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,OAAO,wKAAkB;AAE/B,MAAM,yBAAW,mNAAgB,CAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,wKAAkB;QACjB,KAAK;QACL,WAAW,IAAA,yHAAE,EACX,8FACA;QAED,GAAG,KAAK;;;;;;AAGb,SAAS,WAAW,GAAG,wKAAkB,CAAC,WAAW;AAErD,MAAM,4BAAc,mNAAgB,CAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,2KAAqB;QACpB,KAAK;QACL,WAAW,IAAA,yHAAE,EACX,uYACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG,2KAAqB,CAAC,WAAW;AAE3D,MAAM,4BAAc,mNAAgB,CAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,2KAAqB;QACpB,KAAK;QACL,WAAW,IAAA,yHAAE,EACX,mIACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG,2KAAqB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 735, "column": 0}, "map": {"version":3,"sources":["file:///D:/Protowiz/Industry%20Project/Scanner%20project/Scanner%20Dashboard/src/components/dashboard/scan-activity-charts.tsx"],"sourcesContent":["\"use client\"\n\nimport { Bar, BarChart, Line, LineChart, XAxis, YAxis, Tooltip, Legend } from \"recharts\"\nimport { Card, CardContent, CardHeader, CardTitle, CardDescription } from \"@/components/ui/card\"\nimport { ChartContainer, ChartTooltip, ChartTooltipContent } from \"@/components/ui/chart\"\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\"\n\nconst hourlyData = [\n  { hour: \"00\", scans: 186 }, { hour: \"02\", scans: 305 }, { hour: \"04\", scans: 237 },\n  { hour: \"06\", scans: 73 }, { hour: \"08\", scans: 209 }, { hour: \"10\", scans: 214 },\n  { hour: \"12\", scans: 345 }, { hour: \"14\", scans: 280 }, { hour: \"16\", scans: 190 },\n  { hour: \"18\", scans: 320 }, { hour: \"20\", scans: 250 }, { hour: \"22\", scans: 210 },\n]\n\nconst dailyData = [\n  { date: \"Mon\", scans: 3200 }, { date: \"Tue\", scans: 3800 }, { date: \"Wed\", scans: 3500 },\n  { date: \"Thu\", scans: 4100 }, { date: \"Fri\", scans: 4500 }, { date: \"Sat\", scans: 5200 },\n  { date: \"Sun\", scans: 4800 },\n]\n\nconst deviceData = [\n  { device: \"ESP-01\", scans: 4000, color: \"var(--color-chart-1)\" },\n  { device: \"ESP-02\", scans: 3000, color: \"var(--color-chart-2)\" },\n  { device: \"ESP-03\", scans: 2000, color: \"var(--color-chart-3)\" },\n  { device: \"ESP-04\", scans: 2780, color: \"var(--color-chart-4)\" },\n];\n\n\nconst chartConfig = {\n  scans: {\n    label: \"Scans\",\n    color: \"hsl(var(--chart-1))\",\n  },\n}\n\nexport default function ScanActivityCharts() {\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle>Scan Activity</CardTitle>\n        <CardDescription>Visualize scan activity over different time periods.</CardDescription>\n      </CardHeader>\n      <CardContent>\n        <Tabs defaultValue=\"hourly\">\n          <TabsList className=\"grid w-full grid-cols-3\">\n            <TabsTrigger value=\"hourly\">Hourly</TabsTrigger>\n            <TabsTrigger value=\"daily\">Daily</TabsTrigger>\n            <TabsTrigger value=\"device\">By Device</TabsTrigger>\n          </TabsList>\n          <TabsContent value=\"hourly\">\n            <ChartContainer config={chartConfig} className=\"h-72 w-full\">\n              <BarChart data={hourlyData} accessibilityLayer>\n                <XAxis dataKey=\"hour\" tickLine={false} axisLine={false} tickMargin={8} />\n                <YAxis tickLine={false} axisLine={false} tickMargin={8} />\n                <ChartTooltip content={<ChartTooltipContent />} />\n                <Bar dataKey=\"scans\" fill=\"var(--color-scans)\" radius={4} />\n              </BarChart>\n            </ChartContainer>\n          </TabsContent>\n          <TabsContent value=\"daily\">\n            <ChartContainer config={chartConfig} className=\"h-72 w-full\">\n              <LineChart data={dailyData} accessibilityLayer>\n                <XAxis dataKey=\"date\" tickLine={false} axisLine={false} tickMargin={8} />\n                <YAxis tickLine={false} axisLine={false} tickMargin={8} />\n                <ChartTooltip content={<ChartTooltipContent />} />\n                <Line type=\"monotone\" dataKey=\"scans\" stroke=\"var(--color-scans)\" strokeWidth={2} dot={false} />\n              </LineChart>\n            </ChartContainer>\n          </TabsContent>\n          <TabsContent value=\"device\">\n            <ChartContainer config={chartConfig} className=\"h-72 w-full\">\n                <BarChart layout=\"vertical\" data={deviceData} accessibilityLayer>\n                    <XAxis type=\"number\" hide />\n                    <YAxis dataKey=\"device\" type=\"category\" tickLine={false} axisLine={false} tickMargin={8} width={60} />\n                    <ChartTooltip content={<ChartTooltipContent />} />\n                    <Legend />\n                    <Bar dataKey=\"scans\" radius={4}>\n                    </Bar>\n                </BarChart>\n            </ChartContainer>\n          </TabsContent>\n        </Tabs>\n      </CardContent>\n    </Card>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1148, "column": 0}, "map": {"version":3,"sources":["file:///D:/Protowiz/Industry%20Project/Scanner%20project/Scanner%20Dashboard/src/components/dashboard/storage-management.tsx"],"sourcesContent":["\"use client\"\n\nimport { RadialBar, RadialBarChart } from \"recharts\"\nimport { Button } from \"@/components/ui/button\"\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { ChartContainer, ChartTooltip, ChartTooltipContent } from \"@/components/ui/chart\"\nimport { Trash2 } from \"lucide-react\"\nimport { useToast } from \"@/hooks/use-toast\"\n\nconst chartData = [\n  { name: \"Used\", value: 174.08, fill: \"var(--color-chart-1)\" },\n  { name: \"Available\", value: 81.92, fill: \"var(--color-chart-2)\" },\n]\n\nconst chartConfig = {\n  used: { label: \"Used\", color: \"hsl(var(--chart-1))\" },\n  available: { label: \"Available\", color: \"hsl(var(--chart-2))\" },\n}\n\nexport default function StorageManagement() {\n  const { toast } = useToast();\n  const totalStorage = chartData.reduce((acc, curr) => acc + curr.value, 0);\n  const usedPercentage = (chartData[0].value / totalStorage) * 100;\n  const availablePercentage = (chartData[1].value / totalStorage) * 100;\n\n  const handleCleanData = () => {\n    toast({\n        title: \"Cleaning Storage\",\n        description: \"Old data is being removed. This may take a moment.\"\n    });\n  }\n\n  return (\n    <Card className=\"h-full flex flex-col\">\n      <CardHeader>\n        <CardTitle>Storage Management</CardTitle>\n        <CardDescription>Monitor and manage hub storage.</CardDescription>\n      </CardHeader>\n      <CardContent className=\"flex-1 flex flex-col items-center justify-center pt-6\">\n        <ChartContainer config={chartConfig} className=\"mx-auto aspect-square h-full max-h-[200px]\">\n          <RadialBarChart\n            data={[{ name: 'used', value: usedPercentage, fill: 'var(--color-used)' }]}\n            startAngle={90}\n            endAngle={-270}\n            innerRadius=\"70%\"\n            outerRadius=\"100%\"\n            barSize={20}\n          >\n            <RadialBar\n              background={{ fill: 'hsl(var(--muted))' }}\n              dataKey=\"value\"\n              cornerRadius={10}\n            >\n            </RadialBar>\n            <ChartTooltip\n              cursor={false}\n              content={<ChartTooltipContent \n                formatter={(value) => `${Number(value).toFixed(0)}%`}\n                hideLabel \n              />}\n            />\n          </RadialBarChart>\n        </ChartContainer>\n      </CardContent>\n      <CardFooter className=\"flex-col gap-2 text-sm\">\n        <div className=\"flex w-full items-center justify-between font-medium text-muted-foreground\">\n          <span>Used Storage</span>\n          <span>{usedPercentage.toFixed(2)}%</span>\n        </div>\n        <div className=\"flex w-full items-center justify-between font-medium text-muted-foreground\">\n          <span>Available Space</span>\n          <span>{availablePercentage.toFixed(2)}%</span>\n        </div>\n        <div className=\"w-full pt-4\">\n            <Button onClick={handleCleanData} className=\"w-full\" variant=\"destructive\">\n                <Trash2 className=\"mr-2 h-4 w-4\" />\n                Clean Old Data\n            </Button>\n        </div>\n      </CardFooter>\n    </Card>\n  )\n}\n"],"names":[],"mappings":";;;;;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AAPA;;;;;;;;AASA,MAAM,YAAY;IAChB;QAAE,MAAM;QAAQ,OAAO;QAAQ,MAAM;IAAuB;IAC5D;QAAE,MAAM;QAAa,OAAO;QAAO,MAAM;IAAuB;CACjE;AAED,MAAM,cAAc;IAClB,MAAM;QAAE,OAAO;QAAQ,OAAO;IAAsB;IACpD,WAAW;QAAE,OAAO;QAAa,OAAO;IAAsB;AAChE;AAEe,SAAS;IACtB,MAAM,EAAE,KAAK,EAAE,GAAG,IAAA,wIAAQ;IAC1B,MAAM,eAAe,UAAU,MAAM,CAAC,CAAC,KAAK,OAAS,MAAM,KAAK,KAAK,EAAE;IACvE,MAAM,iBAAiB,AAAC,SAAS,CAAC,EAAE,CAAC,KAAK,GAAG,eAAgB;IAC7D,MAAM,sBAAsB,AAAC,SAAS,CAAC,EAAE,CAAC,KAAK,GAAG,eAAgB;IAElE,MAAM,kBAAkB;QACtB,MAAM;YACF,OAAO;YACP,aAAa;QACjB;IACF;IAEA,qBACE,8OAAC,wIAAI;QAAC,WAAU;;0BACd,8OAAC,8IAAU;;kCACT,8OAAC,6IAAS;kCAAC;;;;;;kCACX,8OAAC,mJAAe;kCAAC;;;;;;;;;;;;0BAEnB,8OAAC,+IAAW;gBAAC,WAAU;0BACrB,cAAA,8OAAC,mJAAc;oBAAC,QAAQ;oBAAa,WAAU;8BAC7C,cAAA,8OAAC,4KAAc;wBACb,MAAM;4BAAC;gCAAE,MAAM;gCAAQ,OAAO;gCAAgB,MAAM;4BAAoB;yBAAE;wBAC1E,YAAY;wBACZ,UAAU,CAAC;wBACX,aAAY;wBACZ,aAAY;wBACZ,SAAS;;0CAET,8OAAC,kKAAS;gCACR,YAAY;oCAAE,MAAM;gCAAoB;gCACxC,SAAQ;gCACR,cAAc;;;;;;0CAGhB,8OAAC,iJAAY;gCACX,QAAQ;gCACR,uBAAS,8OAAC,wJAAmB;oCAC3B,WAAW,CAAC,QAAU,GAAG,OAAO,OAAO,OAAO,CAAC,GAAG,CAAC,CAAC;oCACpD,SAAS;;;;;;;;;;;;;;;;;;;;;;;;;;;0BAMnB,8OAAC,8IAAU;gBAAC,WAAU;;kCACpB,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;0CAAK;;;;;;0CACN,8OAAC;;oCAAM,eAAe,OAAO,CAAC;oCAAG;;;;;;;;;;;;;kCAEnC,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;0CAAK;;;;;;0CACN,8OAAC;;oCAAM,oBAAoB,OAAO,CAAC;oCAAG;;;;;;;;;;;;;kCAExC,8OAAC;wBAAI,WAAU;kCACX,cAAA,8OAAC,4IAAM;4BAAC,SAAS;4BAAiB,WAAU;4BAAS,SAAQ;;8CACzD,8OAAC,oNAAM;oCAAC,WAAU;;;;;;gCAAiB;;;;;;;;;;;;;;;;;;;;;;;;AAOnD","debugId":null}}]
}